import type { NextPage } from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import { useEffect, useState } from 'react';
import ResponsiveGrid from 'dh-marvel/components/Grid';
import PaginationOutlined from 'dh-marvel/components/Pagination';

// const INITIAL_OFFSET = 0
// const INITIAL_LIMIT = 12

// export async function getServerSideProps() {
//     const response = await getComics(INITIAL_OFFSET, INITIAL_LIMIT)
//     return {
//         props: {
//             initialComics: response.data.results,
//             limit: response.data.count,
//             total: response.data.total
//         },
//     };
// }

// type indexProps = {
//     initialComics: any;
//     limit: number,
//     total: number,
// }

// const Index: NextPage<indexProps> = ({ initialComics, total }) => {
const Index: NextPage = () => {
    const [comics, setComics] = useState([])
    const [page, setPage] = useState(1);
    const [total, settotal] = useState(0);
    const LIMIT = 12

    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {
        setPage(value);
    };

    useEffect(() => {
        let offset = LIMIT * (page - 1)
        getComics(offset, LIMIT).then(response => {
            setComics(response?.data?.results)
            settotal(response?.data?.total)
        })
    }, [page])

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <BodySingle title={"Welcome!"}>
                <PaginationOutlined count={Math.round(total / 12)} page={page} handleChange={handleChange} />
                <ResponsiveGrid data={comics} />
                <PaginationOutlined count={Math.round(total / 12)} page={page} handleChange={handleChange} />
            </BodySingle>
        </>
    )
}

export default Index
